generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  fullName String
  phone    String  @unique
  address  String
  roleId   Int     @default(2)
  cart     Cart?
  orders   Order[]
  role     Role    @relation(fields: [roleId], references: [id])
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Cart {
  id       Int           @id @default(autoincrement())
  userId   Int           @unique
  user     User          @relation(fields: [userId], references: [id])
  products CartProduct[]
}

model CartProduct {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@unique([cartId, productId])
}

model Order {
  id            Int            @id @default(autoincrement())
  userId        Int
  amount        Int
  shippingCode  String?
  date          DateTime @default(now())
  user          User           @relation(fields: [userId], references: [id])
  OrderProducts OrderProduct[]
}

model Genre {
  id     Int          @id @default(autoincrement())
  name   String
  movies MovieGenre[]
}

model MovieGenre {
  id      Int   @id @default(autoincrement())
  movieId Int
  genreId Int
  genre   Genre @relation(fields: [genreId], references: [id])
  movie   Movie @relation(fields: [movieId], references: [id])

  @@unique([movieId, genreId])
}

model OrderProduct {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@unique([orderId, productId])
}

model Product {
  id            Int            @id @default(autoincrement())
  name          String
  description   String
  price         Int
  typeId        Int
  movieId       Int
  carts         CartProduct[]
  OrderProducts OrderProduct[]
  movie         Movie          @relation(fields: [movieId], references: [id])
  type          Type           @relation(fields: [typeId], references: [id])
}

model Type {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Movie {
  id          Int          @id @default(autoincrement())
  title       String       @unique
  year        Int
  countryId   Int
  description String
  country     Country      @relation(fields: [countryId], references: [id])
  genres      MovieGenre[]
  products    Product[]
}

model Country {
  id     Int     @id @default(autoincrement())
  name   String
  movies Movie[]
}
